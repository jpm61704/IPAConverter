
==================== FINAL INTERFACE ====================
2017-05-14 16:57:19.100004 UTC

interface E1Pl16mQBGQL8pHRJQxlB4:WordIO 7103
  interface hash: 578b40f5a7c87bf0fa83ee364db75dd9
  ABI hash: 9e8b906fe52de2b2a81c6bc275ca863c
  export-list hash: df0aadece048e5a6381dca9318925445
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: acf05e72875b78e562221270b4acd8f6
  sig of: Nothing
  used TH splices: False
  where
exports:
  WordIO.convertTupleListToCSVString
  WordIO.getWords
  WordIO.printListOfTuples
  WordIO.putWords
module dependencies:
package dependencies: split-0.2.3.1@KYq0115aN3g2OJsj1eljjs
                      base-4.8.2.0* ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  split-0.2.3.1@KYq0115aN3g2OJsj1eljjs:Data.List.Split 1b4363a7c3aefb84937a5ef10996ae2b
import  -/  split-0.2.3.1@KYq0115aN3g2OJsj1eljjs:Data.List.Split.Internals f7f61076d9d4210fc14485c2de15cbf5
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO bb5b81adcea33b14bd4abe16d7dde45f
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
1a10634d05c75e108a3d72b3aa4d650b
  convertTupleListToCSVString ::
    [(GHC.Base.String, GHC.Base.String)] -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
e09b7dc21a21e100a5cf1fd073fb1d27
  getWords :: GHC.IO.FilePath -> GHC.Types.IO [GHC.Base.String]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                WordIO.getWords1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <[GHC.Base.String]>_R)) -}
0ea9da2b593457c82006fb3d0fe8af7d
  getWords1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ f :: GHC.IO.FilePath
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        f
                        GHC.IO.IOMode.ReadMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    GHC.List.filter
                      @ [GHC.Types.Char]
                      WordIO.getWords5
                      (WordIO.getWords3
                         (GHC.List.filter
                            @ GHC.Types.Char
                            WordIO.getWords2
                            ipv3)) #) } }) -}
8c5afa97510531261dc905569d7b78d4
  getWords2 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds1 :: GHC.Types.Char ->
                 case ds1 of wild1 { GHC.Types.C# c2 ->
                 case c2 of wild {
                   DEFAULT -> GHC.Types.True '\r' -> GHC.Types.False } }) -}
ee579762c90a510fe0b9eb6af55a4ba5
  getWords3 :: [GHC.Types.Char] -> [[GHC.Types.Char]]
  {- Unfolding: (Data.List.Split.Internals.splitOn
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   WordIO.getWords4) -}
2abfbbc86eb0fe660988c40d3889ac5b
  getWords4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
2f3047232025d72a796349772efcb3d5
  getWords5 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: [GHC.Types.Char] ->
                 case x of wild {
                   [] -> GHC.Types.False : ds1 ds2 -> GHC.Types.True }) -}
5833614460eeb3e231a90f3a74e7d50c
  printListOfTuples ::
    [(GHC.Base.String, GHC.Base.String)] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                WordIO.printListOfTuples1
                  `cast`
                (<[(GHC.Base.String, GHC.Base.String)]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d3f8eda456689c4f36d808f5851fdedf
  printListOfTuples1 ::
    [(GHC.Base.String, GHC.Base.String)]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
748e3ca1a1a98c8fa51ddc3a13e69c1b
  putWords ::
    [(GHC.Base.String, GHC.Base.String)]
    -> GHC.IO.FilePath -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                WordIO.putWords1
                  `cast`
                (<[(GHC.Base.String, GHC.Base.String)]>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
4c74387921c3521fc9e19df68ea068f2
  putWords1 ::
    [(GHC.Base.String, GHC.Base.String)]
    -> GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><L,U><L,U>,
     Unfolding: (\ wrds :: [(GHC.Base.String, GHC.Base.String)]
                   f :: GHC.IO.FilePath
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Control.Exception.Base.bracket1
                   @ GHC.IO.Handle.Types.Handle
                   @ ()
                   @ ()
                   (GHC.IO.Handle.FD.openFile1 f GHC.IO.IOMode.WriteMode)
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                   GHC.IO.Handle.hClose1
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   (\ hdl :: GHC.IO.Handle.Types.Handle[OneShot]
                      eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                    GHC.IO.Handle.Text.hPutStr2
                      hdl
                      (WordIO.convertTupleListToCSVString wrds)
                      GHC.Types.False
                      eta1)
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

